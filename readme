# Fake_News_Detection


## Introduction
The **Fake News Detector** is a machine learning-based solution designed to classify news articles as real or fake. It leverages **TF-IDF vectorization** for text processing and **Naive Bayes classification** for prediction. The model is trained on labeled data and evaluates its performance using various metrics.

## Key Functionalities
- **Text Preprocessing**: Cleans and normalizes textual data by removing special characters and converting text to lowercase.
- **Feature Extraction**: Uses **TF-IDF vectorization** to transform text into numerical representations.
- **Model Training & Prediction**: Implements a **Naive Bayes classifier** to classify news articles.
- **Performance Analysis**: Provides accuracy scores and a classification report for model evaluation.
- **Result Storage**: Saves predictions along with confidence scores in a CSV file for further analysis.

## Installation Guide
### System Requirements
Before running the project, ensure that your system meets the following requirements:
- Python 3.7 or later
- Required Python libraries: `pandas`, `scikit-learn`

### Installation Steps
To install the required dependencies, run:
```sh
pip install pandas scikit-learn
```

## Dataset Requirements
The input dataset should be in CSV format with the following columns:
- **text**: The content of the news article.
- **label**: The classification label (`1` for real news, `0` for fake news).

Example CSV format:
```csv
text,label
"Government announces new policy changes",1
"You wonâ€™t believe what this celebrity did!",0
```

## Execution Steps
### Running the Detector
1. Place your dataset file (`fake-news-dataset.csv`) in the project directory.
2. Run the Python script:
```sh
python fake_news_detector.py
```

### Output Results
- **Model Performance**: Displays **accuracy score** and **classification report**.
- **Prediction Results**: Generates `fake_news_predictions.csv` containing:
  - Original news text
  - Actual classification label
  - Predicted classification label
  - Confidence score of the prediction

## Project Structure
- **`FakeNewsDetector` Class**: Manages data preprocessing, training, and classification.
- **Methods:**
  - `preprocess_text()`: Cleans and normalizes text.
  - `load_and_analyze_csv()`: Loads data, processes text, trains the model, evaluates performance, and generates predictions.
  - `main()`: Controls script execution and ensures dataset handling.

## Enhancements & Future Improvements
This project can be improved by integrating:
- **Advanced NLP Techniques**: Incorporating lemmatization, named entity recognition, and stopword removal.
- **Deep Learning Models**: Implementing LSTMs, BERT, or transformer-based models.
- **Multilingual Support**: Expanding the model to detect fake news in multiple languages.
- **Web Interface**: Developing a GUI or web app for user-friendly interaction.

## How to Contribute
We welcome contributions! You can contribute by:
- Enhancing model accuracy.
- Improving text preprocessing techniques.
- Adding data visualization for better insights.
- Extending functionality to support real-time news detection.


